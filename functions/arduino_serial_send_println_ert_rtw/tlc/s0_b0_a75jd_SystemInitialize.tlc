%implements s0_b0_a75jd_SystemInitialize "C"

%function SystemInitialize(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcInitializeConditionsFcnOfS0B0 = OpaqueTLCBlockFcn("InitializeConditions", 0, 0, 0, 1, 0)
%assign tlcInitializeConditionsFcnOfS0B2 = OpaqueTLCBlockFcn("InitializeConditions", 0, 2, 0, 1, 1)
%assign tlcInitializeConditionsFcnOfS0B3 = OpaqueTLCBlockFcn("InitializeConditions", 0, 3, 0, 1, 2)
%<SLibInsertAsyncTaskInitializeCode(system)>
%<SLibWriteMachineInitialize()>
%if !WHITE_SPACE(tlcInitializeConditionsFcnOfS0B0)
/* InitializeConditions for M-S-Function: '<Root>/Serial Configuration' */
%<tlcInitializeConditionsFcnOfS0B0>\
%endif
%if !WHITE_SPACE(tlcInitializeConditionsFcnOfS0B2)
/* InitializeConditions for M-S-Function: '<Root>/Serial Send' incorporates:
 *  Constant: '<Root>/Constant'
 */
%<tlcInitializeConditionsFcnOfS0B2>\
%endif
%if !WHITE_SPACE(tlcInitializeConditionsFcnOfS0B3)
/* InitializeConditions for M-S-Function: '<Root>/Serial Receive' */
%<tlcInitializeConditionsFcnOfS0B3>\
%endif
%<SLibInsertInitPeriodicCStatesFcn(system)>
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedSystemInitializeLocalVars", localVarDecl)>
%endfunction
%function SystemInitializeFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void SystemInitialize(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
